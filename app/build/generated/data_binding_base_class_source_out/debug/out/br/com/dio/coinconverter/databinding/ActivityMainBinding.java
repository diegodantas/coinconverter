// Generated by view binder compiler. Do not edit!
package br.com.dio.coinconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatAutoCompleteTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.dio.coinconverter.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnConverter;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final Guideline guideEnd;

  @NonNull
  public final Guideline guideStart;

  @NonNull
  public final TextInputLayout tilFrom;

  @NonNull
  public final TextInputLayout tilTo;

  @NonNull
  public final TextInputLayout tilValue;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final AppCompatAutoCompleteTextView tvFrom;

  @NonNull
  public final TextView tvResult;

  @NonNull
  public final AppCompatAutoCompleteTextView tvTo;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnConverter, @NonNull MaterialButton btnSave,
      @NonNull Guideline guideEnd, @NonNull Guideline guideStart, @NonNull TextInputLayout tilFrom,
      @NonNull TextInputLayout tilTo, @NonNull TextInputLayout tilValue,
      @NonNull MaterialToolbar toolbar, @NonNull AppCompatAutoCompleteTextView tvFrom,
      @NonNull TextView tvResult, @NonNull AppCompatAutoCompleteTextView tvTo) {
    this.rootView = rootView;
    this.btnConverter = btnConverter;
    this.btnSave = btnSave;
    this.guideEnd = guideEnd;
    this.guideStart = guideStart;
    this.tilFrom = tilFrom;
    this.tilTo = tilTo;
    this.tilValue = tilValue;
    this.toolbar = toolbar;
    this.tvFrom = tvFrom;
    this.tvResult = tvResult;
    this.tvTo = tvTo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_converter;
      MaterialButton btnConverter = ViewBindings.findChildViewById(rootView, id);
      if (btnConverter == null) {
        break missingId;
      }

      id = R.id.btn_save;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.guide_end;
      Guideline guideEnd = ViewBindings.findChildViewById(rootView, id);
      if (guideEnd == null) {
        break missingId;
      }

      id = R.id.guide_start;
      Guideline guideStart = ViewBindings.findChildViewById(rootView, id);
      if (guideStart == null) {
        break missingId;
      }

      id = R.id.til_from;
      TextInputLayout tilFrom = ViewBindings.findChildViewById(rootView, id);
      if (tilFrom == null) {
        break missingId;
      }

      id = R.id.til_to;
      TextInputLayout tilTo = ViewBindings.findChildViewById(rootView, id);
      if (tilTo == null) {
        break missingId;
      }

      id = R.id.til_value;
      TextInputLayout tilValue = ViewBindings.findChildViewById(rootView, id);
      if (tilValue == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_from;
      AppCompatAutoCompleteTextView tvFrom = ViewBindings.findChildViewById(rootView, id);
      if (tvFrom == null) {
        break missingId;
      }

      id = R.id.tv_result;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      id = R.id.tv_to;
      AppCompatAutoCompleteTextView tvTo = ViewBindings.findChildViewById(rootView, id);
      if (tvTo == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnConverter, btnSave, guideEnd,
          guideStart, tilFrom, tilTo, tilValue, toolbar, tvFrom, tvResult, tvTo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
